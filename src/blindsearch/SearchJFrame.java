/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package blindsearch;

import java.awt.Color;
import java.awt.GridLayout;
import java.awt.TextField;
import java.util.ArrayList;

/**
 *
 * @author yamen
 */
public class SearchJFrame extends javax.swing.JFrame {

    TextField [][] eightCubeTextField=new TextField[10][10];
    int indexOfSolution=0;
    ArrayList<int[][]> solution;
    /**
     * Creates new form SearchJFrame
     */
    public SearchJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createBuzzleButton = new javax.swing.JButton();
        solveButton = new javax.swing.JButton();
        eightCubePanel = new javax.swing.JPanel();
        messageLabel = new javax.swing.JLabel();
        NextButton = new javax.swing.JButton();
        prevButton = new javax.swing.JButton();
        uniformTimeLabel = new javax.swing.JLabel();
        AStarTimeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        createBuzzleButton.setText("create puzzle");
        createBuzzleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBuzzleButtonActionPerformed(evt);
            }
        });

        solveButton.setText("solve me");
        solveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout eightCubePanelLayout = new javax.swing.GroupLayout(eightCubePanel);
        eightCubePanel.setLayout(eightCubePanelLayout);
        eightCubePanelLayout.setHorizontalGroup(
            eightCubePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 171, Short.MAX_VALUE)
        );
        eightCubePanelLayout.setVerticalGroup(
            eightCubePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
        );

        NextButton.setText("Next");
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        prevButton.setText("Previous");
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AStarTimeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(uniformTimeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createBuzzleButton)
                        .addGap(57, 57, 57)
                        .addComponent(prevButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                        .addComponent(NextButton)
                        .addGap(106, 106, 106)
                        .addComponent(solveButton)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(eightCubePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(eightCubePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(solveButton)
                    .addComponent(createBuzzleButton)
                    .addComponent(prevButton)
                    .addComponent(NextButton))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(uniformTimeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addComponent(AStarTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createBuzzleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBuzzleButtonActionPerformed
        // TODO add your handling code here:
        eightCubePanel.removeAll();
        eightCubePanel.setLayout(new GridLayout(0,3));
        for(int i=0;i<3;i++)
        {
            for(int j=0;j<3;j++)
            {
                eightCubeTextField[i][j]=new TextField("");
                
                eightCubePanel.add(eightCubeTextField[i][j]);
            }
        }
        eightCubePanel.revalidate();
        eightCubePanel.setVisible(true);
    }//GEN-LAST:event_createBuzzleButtonActionPerformed

    private void solveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solveButtonActionPerformed
        // TODO add your handling code here:
        int[][]tempState=new int[4][4];
        for(int i=0;i<3;i++)
        {
            for(int j=0;j<3;j++)
            {
                tempState[i][j]=Integer.parseInt(eightCubeTextField[i][j].getText());
            }
        }
        State s=new EightCubeState(tempState);
        System.out.println(s);
        Node start=new Node(s,null,0,0);
        ArrayList<Action> actions=new ArrayList<Action>();
        actions.add(new EightCubeAction("up"));
        actions.add(new EightCubeAction("down"));
        actions.add(new EightCubeAction("right"));
        actions.add(new EightCubeAction("left"));
        //BreadthFirstSearch a=new BreadthFirstSearch(start,actions);
        String message;
        long  T1=System.currentTimeMillis();
        AStarSearch a=new AStarSearch(start,actions);
        if(a.found())
        {
            System.out.println("found");
            long  T2=System.currentTimeMillis();
           message="found a solution";
           NextButton.setVisible(true);
           prevButton.setVisible(true);
           messageLabel.setForeground(Color.green);
           indexOfSolution=0;
           String AStarTimeMessage="the Time spent using A* is:"+(T2-T1)+"milliseconds";
           T1=System.currentTimeMillis();
           solution=a.savePath();
            System.out.println("printing the solution Array:");
           for(int k=0;k<solution.size();k++)
           {
               int [][]grid=new int[4][4];
               grid=solution.get(k);
                    String res="";
                    for(int i=0;i<3;i++)
                        for(int j=0;j<3;j++)
                            res+=grid[i][j];
               System.out.println(res);
           }
           a.printSolution();
           indexOfSolution=1;
           UniformCostSearch a2=new UniformCostSearch(start,actions);
           a2.found();
           T2=System.currentTimeMillis();
           String uniformTimeMessage="the Time spent using uniform cost Search is:"+(T2-T1)+"milliseconds";
           AStarTimeLabel.setText(AStarTimeMessage);
           uniformTimeLabel.setText(uniformTimeMessage);
           AStarTimeLabel.setVisible(true);
           uniformTimeLabel.setVisible(true);
        }
        else
        {
            NextButton.setVisible(false);
            prevButton.setVisible(false);
            message="do not found a solution";
            messageLabel.setForeground(Color.red);
            AStarTimeLabel.setVisible(false);
           uniformTimeLabel.setVisible(false);
        }
    }//GEN-LAST:event_solveButtonActionPerformed

    void printState(int [][] s)
    {
        for(int i=0;i<3;i++)
        {
            for(int j=0;j<3;j++)
            {
                eightCubeTextField[i][j].setText(""+s[i][j]);
            }
        }
        eightCubePanel.revalidate();
    }
    private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed
        // TODO add your handling code here:
        if(indexOfSolution==solution.size())
        {
            NextButton.setVisible(false);
        }
        else
        {
            printState(solution.get(indexOfSolution));
            indexOfSolution++;
            prevButton.setVisible(true);
        }
    }//GEN-LAST:event_NextButtonActionPerformed

    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        // TODO add your handling code here:
        if(indexOfSolution<=0)
        {
            prevButton.setVisible(false);
        }
        else if(indexOfSolution>=solution.size())
        {
            indexOfSolution--;
             printState(solution.get(indexOfSolution));
            indexOfSolution--;
            NextButton.setVisible(true);
        }
        else
        {
            printState(solution.get(indexOfSolution));
            indexOfSolution--;
            NextButton.setVisible(true);
        }
        
    }//GEN-LAST:event_prevButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AStarTimeLabel;
    private javax.swing.JButton NextButton;
    private javax.swing.JButton createBuzzleButton;
    private javax.swing.JPanel eightCubePanel;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JButton prevButton;
    private javax.swing.JButton solveButton;
    private javax.swing.JLabel uniformTimeLabel;
    // End of variables declaration//GEN-END:variables
}
